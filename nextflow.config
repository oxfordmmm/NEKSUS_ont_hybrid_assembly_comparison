params.projDir="${projectDir}"

// #############Â profiles #############
profiles {
    conda {
	conda.enabled = true
    conda.useMamba = false
	process {
		withName: 'RAWQC_ONT' {
			conda = "${projectDir}/envs/seqkit.yml"
	    }
		withName: 'RAWQC_ILLUMINA' {
			conda = "${projectDir}/envs/seqkit.yml"
	    }
        withName: 'RAWQC_ONT_SUBSAMPLED' {
            conda = "${projectDir}/envs/seqkit.yml"
        }
        withName: 'AUTOCYCLER_SUBSAMPLE' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }
        withName: 'AUTOCYCLER_ASSEMBLE_CANU' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }
        withName: 'AUTOCYCLER_ASSEMBLE_FLYE' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }
        withName: 'AUTOCYCLER_ASSEMBLE_MINIASM' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }
        withName: 'AUTOCYCLER_ASSEMBLE_NECAT' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }
        withName: 'AUTOCYCLER_ASSEMBLE_RAVEN' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
		}
        withName: 'AUTOCYCLER_ASSEMBLE' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }   
        withName: 'AUTOCYCLER_COMPRESS' {
            conda = "${projectDir}/envs/autocycler_with_scripts.yml"
        }
		withName: 'SUBSAMPLE_ONT' {
			conda = "${projectDir}/envs/dragonflye.yml"
	    }
		withName: 'SUBSAMPLE_ILLUMINA' {
			conda = "${projectDir}/envs/dragonflye.yml"
	    }
		withName: 'FLYE' {
			conda = "${projectDir}/envs/dragonflye.yml"
	    }
		withName: 'MEDAKA' {
			conda = "${projectDir}/envs/medaka.yml"
	    }
		withName: 'MEDAKA_FULL' {
			conda = "${projectDir}/envs/medaka.yml"
		}
		withName: 'POLYPOLISH' {
			conda = "${projectDir}/envs/polypolish.yml"
	    }
        withName: 'PYPOLCA' {
            conda = "${projectDir}/envs/pypolca.yml"
        }
		withName: 'UNICYCLER' {
			conda = "${projectDir}/envs/unicycler.yml"
	    }
		withName: 'UNICYCLER_BOLD' {
			conda = "${projectDir}/envs/unicycler.yml"
	    }
		withName: 'HYBRACTER_HYBRID_INDIVIDUAL' {
			conda = "${projectDir}/envs/hybracter.yml"
	    }
        withName: 'PYPOLCA_ANALYSE' {
            conda = "${projectDir}/envs/pypolca.yml"
            }
		withName: 'HYBRACTER_LONG_INDIVIDUAL' {
			conda = "${projectDir}/envs/hybracter.yml"
	    }
		withName: 'SEQKIT' {
			conda = "${projectDir}/envs/seqkit.yml"
	    }
		withName: 'BAKTA_DOWNLOAD' {
			conda = "${projectDir}/envs/bakta.yml"
	    }
		withName: 'BAKTA' {
			conda = "${projectDir}/envs/bakta.yml"
	    }
		withName: 'MLST' {
			conda = "${projectDir}/envs/mlst.yml"
	    }
		withName: 'DNADIFF' {
			conda = "${projectDir}/envs/mummer4.yml"
	    }
		withName: 'DNADIFF_REV' {
		    conda = "${projectDir}/envs/mummer4.yml"
	    }
        withName: 'KRAKEN2' {
            conda = "${projectDir}/envs/kraken2.yml"
        }   
        withName: 'SPECIES_FROM_KRAKEN2' {
            conda = "${projectDir}/envs/kraken2.yml"
        }
		withName: 'AMRFINDERPLUS' {
		    conda = "${projectDir}/envs/amrfinder.yml"
	    } 
        withName: 'PLASMIDFINDER' {
            conda = "${projectDir}/envs/plasmidfinder.yml"
        }
	}
    }
	cloud {
                process.executor = 'local'
                process.queue = 'short'
                process {
                        withName: 'BAKTA_DOWNLOAD' {
                                executor = 'local'
                 }
                 withName: 'RAWQC_ONT' {
                                executor = 'local'
                 }
                 withLabel: 'online' {
                                executor = 'local'
                 }
                }
        }
}

// ########### processes ###############

process.errorStrategy = 'ignore'

